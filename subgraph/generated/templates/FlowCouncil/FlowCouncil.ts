// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class MaxVotingSpreadSet extends ethereum.Event {
  get params(): MaxVotingSpreadSet__Params {
    return new MaxVotingSpreadSet__Params(this);
  }
}

export class MaxVotingSpreadSet__Params {
  _event: MaxVotingSpreadSet;

  constructor(event: MaxVotingSpreadSet) {
    this._event = event;
  }

  get maxVotingSpread(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class RecipientAdded extends ethereum.Event {
  get params(): RecipientAdded__Params {
    return new RecipientAdded__Params(this);
  }
}

export class RecipientAdded__Params {
  _event: RecipientAdded;

  constructor(event: RecipientAdded) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get metadata(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class RecipientRemoved extends ethereum.Event {
  get params(): RecipientRemoved__Params {
    return new RecipientRemoved__Params(this);
  }
}

export class RecipientRemoved__Params {
  _event: RecipientRemoved;

  constructor(event: RecipientRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Voted extends ethereum.Event {
  get params(): Voted__Params {
    return new Voted__Params(this);
  }
}

export class Voted__Params {
  _event: Voted;

  constructor(event: Voted) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get votes(): Array<VotedVotesStruct> {
    return this._event.parameters[1].value.toTupleArray<VotedVotesStruct>();
  }
}

export class VotedVotesStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class VoterAdded extends ethereum.Event {
  get params(): VoterAdded__Params {
    return new VoterAdded__Params(this);
  }
}

export class VoterAdded__Params {
  _event: VoterAdded;

  constructor(event: VoterAdded) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get votingPower(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VoterEdited extends ethereum.Event {
  get params(): VoterEdited__Params {
    return new VoterEdited__Params(this);
  }
}

export class VoterEdited__Params {
  _event: VoterEdited;

  constructor(event: VoterEdited) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get votingPower(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VoterRemoved extends ethereum.Event {
  get params(): VoterRemoved__Params {
    return new VoterRemoved__Params(this);
  }
}

export class VoterRemoved__Params {
  _event: VoterRemoved;

  constructor(event: VoterRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FlowCouncil__getRecipientResultRecipientStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get votes(): BigInt {
    return this[1].toBigInt();
  }
}

export class FlowCouncil__getVoterResultVoterStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get votingPower(): BigInt {
    return this[1].toBigInt();
  }

  get votes(): Array<FlowCouncil__getVoterResultVoterVotesStruct> {
    return this[2].toTupleArray<FlowCouncil__getVoterResultVoterVotesStruct>();
  }
}

export class FlowCouncil__getVoterResultVoterVotesStruct extends ethereum.Tuple {
  get recipientId(): BigInt {
    return this[0].toBigInt();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class FlowCouncil__getVotesResultValue0Struct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class FlowCouncil__recipientByIdResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getAccount(): Address {
    return this.value0;
  }

  getVotes(): BigInt {
    return this.value1;
  }
}

export class FlowCouncil__recipientsResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getAccount(): Address {
    return this.value0;
  }

  getVotes(): BigInt {
    return this.value1;
  }
}

export class FlowCouncil__votersResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getAccount(): Address {
    return this.value0;
  }

  getVotingPower(): BigInt {
    return this.value1;
  }
}

export class FlowCouncil extends ethereum.SmartContract {
  static bind(address: Address): FlowCouncil {
    return new FlowCouncil("FlowCouncil", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  RECIPIENT_MANAGER_ROLE(): Bytes {
    let result = super.call(
      "RECIPIENT_MANAGER_ROLE",
      "RECIPIENT_MANAGER_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_RECIPIENT_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "RECIPIENT_MANAGER_ROLE",
      "RECIPIENT_MANAGER_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  VOTER_MANAGER_ROLE(): Bytes {
    let result = super.call(
      "VOTER_MANAGER_ROLE",
      "VOTER_MANAGER_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_VOTER_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "VOTER_MANAGER_ROLE",
      "VOTER_MANAGER_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  distributionPool(): Address {
    let result = super.call(
      "distributionPool",
      "distributionPool():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_distributionPool(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "distributionPool",
      "distributionPool():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRecipient(
    _account: Address,
  ): FlowCouncil__getRecipientResultRecipientStruct {
    let result = super.call(
      "getRecipient",
      "getRecipient(address):((address,uint96))",
      [ethereum.Value.fromAddress(_account)],
    );

    return changetype<FlowCouncil__getRecipientResultRecipientStruct>(
      result[0].toTuple(),
    );
  }

  try_getRecipient(
    _account: Address,
  ): ethereum.CallResult<FlowCouncil__getRecipientResultRecipientStruct> {
    let result = super.tryCall(
      "getRecipient",
      "getRecipient(address):((address,uint96))",
      [ethereum.Value.fromAddress(_account)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<FlowCouncil__getRecipientResultRecipientStruct>(
        value[0].toTuple(),
      ),
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getVoter(_account: Address): FlowCouncil__getVoterResultVoterStruct {
    let result = super.call(
      "getVoter",
      "getVoter(address):((address,uint96,(uint160,uint96)[]))",
      [ethereum.Value.fromAddress(_account)],
    );

    return changetype<FlowCouncil__getVoterResultVoterStruct>(
      result[0].toTuple(),
    );
  }

  try_getVoter(
    _account: Address,
  ): ethereum.CallResult<FlowCouncil__getVoterResultVoterStruct> {
    let result = super.tryCall(
      "getVoter",
      "getVoter(address):((address,uint96,(uint160,uint96)[]))",
      [ethereum.Value.fromAddress(_account)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<FlowCouncil__getVoterResultVoterStruct>(value[0].toTuple()),
    );
  }

  getVotes(_account: Address): Array<FlowCouncil__getVotesResultValue0Struct> {
    let result = super.call(
      "getVotes",
      "getVotes(address):((address,uint96)[])",
      [ethereum.Value.fromAddress(_account)],
    );

    return result[0].toTupleArray<FlowCouncil__getVotesResultValue0Struct>();
  }

  try_getVotes(
    _account: Address,
  ): ethereum.CallResult<Array<FlowCouncil__getVotesResultValue0Struct>> {
    let result = super.tryCall(
      "getVotes",
      "getVotes(address):((address,uint96)[])",
      [ethereum.Value.fromAddress(_account)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<FlowCouncil__getVotesResultValue0Struct>(),
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxVotingSpread(): i32 {
    let result = super.call("maxVotingSpread", "maxVotingSpread():(uint8)", []);

    return result[0].toI32();
  }

  try_maxVotingSpread(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "maxVotingSpread",
      "maxVotingSpread():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  recipientById(param0: BigInt): FlowCouncil__recipientByIdResult {
    let result = super.call(
      "recipientById",
      "recipientById(uint160):(address,uint96)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new FlowCouncil__recipientByIdResult(
      result[0].toAddress(),
      result[1].toBigInt(),
    );
  }

  try_recipientById(
    param0: BigInt,
  ): ethereum.CallResult<FlowCouncil__recipientByIdResult> {
    let result = super.tryCall(
      "recipientById",
      "recipientById(uint160):(address,uint96)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FlowCouncil__recipientByIdResult(
        value[0].toAddress(),
        value[1].toBigInt(),
      ),
    );
  }

  recipientIdByAddress(param0: Address): BigInt {
    let result = super.call(
      "recipientIdByAddress",
      "recipientIdByAddress(address):(uint160)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_recipientIdByAddress(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "recipientIdByAddress",
      "recipientIdByAddress(address):(uint160)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  recipients(param0: Address): FlowCouncil__recipientsResult {
    let result = super.call(
      "recipients",
      "recipients(address):(address,uint96)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new FlowCouncil__recipientsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
    );
  }

  try_recipients(
    param0: Address,
  ): ethereum.CallResult<FlowCouncil__recipientsResult> {
    let result = super.tryCall(
      "recipients",
      "recipients(address):(address,uint96)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FlowCouncil__recipientsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
      ),
    );
  }

  superToken(): Address {
    let result = super.call("superToken", "superToken():(address)", []);

    return result[0].toAddress();
  }

  try_superToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("superToken", "superToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  voters(param0: Address): FlowCouncil__votersResult {
    let result = super.call("voters", "voters(address):(address,uint96)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return new FlowCouncil__votersResult(
      result[0].toAddress(),
      result[1].toBigInt(),
    );
  }

  try_voters(param0: Address): ethereum.CallResult<FlowCouncil__votersResult> {
    let result = super.tryCall("voters", "voters(address):(address,uint96)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FlowCouncil__votersResult(value[0].toAddress(), value[1].toBigInt()),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _superToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _admin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddRecipientCall extends ethereum.Call {
  get inputs(): AddRecipientCall__Inputs {
    return new AddRecipientCall__Inputs(this);
  }

  get outputs(): AddRecipientCall__Outputs {
    return new AddRecipientCall__Outputs(this);
  }
}

export class AddRecipientCall__Inputs {
  _call: AddRecipientCall;

  constructor(call: AddRecipientCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _metadata(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddRecipientCall__Outputs {
  _call: AddRecipientCall;

  constructor(call: AddRecipientCall) {
    this._call = call;
  }
}

export class AddVoterCall extends ethereum.Call {
  get inputs(): AddVoterCall__Inputs {
    return new AddVoterCall__Inputs(this);
  }

  get outputs(): AddVoterCall__Outputs {
    return new AddVoterCall__Outputs(this);
  }
}

export class AddVoterCall__Inputs {
  _call: AddVoterCall;

  constructor(call: AddVoterCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _votingPower(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddVoterCall__Outputs {
  _call: AddVoterCall;

  constructor(call: AddVoterCall) {
    this._call = call;
  }
}

export class EditVoterCall extends ethereum.Call {
  get inputs(): EditVoterCall__Inputs {
    return new EditVoterCall__Inputs(this);
  }

  get outputs(): EditVoterCall__Outputs {
    return new EditVoterCall__Outputs(this);
  }
}

export class EditVoterCall__Inputs {
  _call: EditVoterCall;

  constructor(call: EditVoterCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _votingPower(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EditVoterCall__Outputs {
  _call: EditVoterCall;

  constructor(call: EditVoterCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RemoveRecipientCall extends ethereum.Call {
  get inputs(): RemoveRecipientCall__Inputs {
    return new RemoveRecipientCall__Inputs(this);
  }

  get outputs(): RemoveRecipientCall__Outputs {
    return new RemoveRecipientCall__Outputs(this);
  }
}

export class RemoveRecipientCall__Inputs {
  _call: RemoveRecipientCall;

  constructor(call: RemoveRecipientCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveRecipientCall__Outputs {
  _call: RemoveRecipientCall;

  constructor(call: RemoveRecipientCall) {
    this._call = call;
  }
}

export class RemoveVoterCall extends ethereum.Call {
  get inputs(): RemoveVoterCall__Inputs {
    return new RemoveVoterCall__Inputs(this);
  }

  get outputs(): RemoveVoterCall__Outputs {
    return new RemoveVoterCall__Outputs(this);
  }
}

export class RemoveVoterCall__Inputs {
  _call: RemoveVoterCall;

  constructor(call: RemoveVoterCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveVoterCall__Outputs {
  _call: RemoveVoterCall;

  constructor(call: RemoveVoterCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetMaxVotingSpreadCall extends ethereum.Call {
  get inputs(): SetMaxVotingSpreadCall__Inputs {
    return new SetMaxVotingSpreadCall__Inputs(this);
  }

  get outputs(): SetMaxVotingSpreadCall__Outputs {
    return new SetMaxVotingSpreadCall__Outputs(this);
  }
}

export class SetMaxVotingSpreadCall__Inputs {
  _call: SetMaxVotingSpreadCall;

  constructor(call: SetMaxVotingSpreadCall) {
    this._call = call;
  }

  get _maxVotingSpread(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetMaxVotingSpreadCall__Outputs {
  _call: SetMaxVotingSpreadCall;

  constructor(call: SetMaxVotingSpreadCall) {
    this._call = call;
  }
}

export class UpdateManagersCall extends ethereum.Call {
  get inputs(): UpdateManagersCall__Inputs {
    return new UpdateManagersCall__Inputs(this);
  }

  get outputs(): UpdateManagersCall__Outputs {
    return new UpdateManagersCall__Outputs(this);
  }
}

export class UpdateManagersCall__Inputs {
  _call: UpdateManagersCall;

  constructor(call: UpdateManagersCall) {
    this._call = call;
  }

  get _managers(): Array<UpdateManagersCall_managersStruct> {
    return this._call.inputValues[0].value.toTupleArray<UpdateManagersCall_managersStruct>();
  }
}

export class UpdateManagersCall__Outputs {
  _call: UpdateManagersCall;

  constructor(call: UpdateManagersCall) {
    this._call = call;
  }
}

export class UpdateManagersCall_managersStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get role(): Bytes {
    return this[1].toBytes();
  }

  get status(): i32 {
    return this[2].toI32();
  }
}

export class UpdateRecipientsCall extends ethereum.Call {
  get inputs(): UpdateRecipientsCall__Inputs {
    return new UpdateRecipientsCall__Inputs(this);
  }

  get outputs(): UpdateRecipientsCall__Outputs {
    return new UpdateRecipientsCall__Outputs(this);
  }
}

export class UpdateRecipientsCall__Inputs {
  _call: UpdateRecipientsCall;

  constructor(call: UpdateRecipientsCall) {
    this._call = call;
  }

  get _recipients(): Array<UpdateRecipientsCall_recipientsStruct> {
    return this._call.inputValues[0].value.toTupleArray<UpdateRecipientsCall_recipientsStruct>();
  }

  get _metadata(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class UpdateRecipientsCall__Outputs {
  _call: UpdateRecipientsCall;

  constructor(call: UpdateRecipientsCall) {
    this._call = call;
  }
}

export class UpdateRecipientsCall_recipientsStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get status(): i32 {
    return this[1].toI32();
  }
}

export class UpdateVotersCall extends ethereum.Call {
  get inputs(): UpdateVotersCall__Inputs {
    return new UpdateVotersCall__Inputs(this);
  }

  get outputs(): UpdateVotersCall__Outputs {
    return new UpdateVotersCall__Outputs(this);
  }
}

export class UpdateVotersCall__Inputs {
  _call: UpdateVotersCall;

  constructor(call: UpdateVotersCall) {
    this._call = call;
  }

  get _voters(): Array<UpdateVotersCall_votersStruct> {
    return this._call.inputValues[0].value.toTupleArray<UpdateVotersCall_votersStruct>();
  }

  get _maxVotingSpread(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class UpdateVotersCall__Outputs {
  _call: UpdateVotersCall;

  constructor(call: UpdateVotersCall) {
    this._call = call;
  }
}

export class UpdateVotersCall_votersStruct extends ethereum.Tuple {
  get account(): Address {
    return this[0].toAddress();
  }

  get votingPower(): BigInt {
    return this[1].toBigInt();
  }

  get votes(): Array<UpdateVotersCall_votersVotesStruct> {
    return this[2].toTupleArray<UpdateVotersCall_votersVotesStruct>();
  }
}

export class UpdateVotersCall_votersVotesStruct extends ethereum.Tuple {
  get recipientId(): BigInt {
    return this[0].toBigInt();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get _votes(): Array<VoteCall_votesStruct> {
    return this._call.inputValues[0].value.toTupleArray<VoteCall_votesStruct>();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}

export class VoteCall_votesStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}
